"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    Scale: function() {
        return Scale;
    },
    ScaleRelaxed: function() {
        return ScaleRelaxed;
    },
    ScaleSnappy: function() {
        return ScaleSnappy;
    }
});
const _reactmotion = require("@fluentui/react-motion");
/** Define a presence motion for scale in/out */ const scalePresenceFn = ({ duration = _reactmotion.motionTokens.durationNormal, easing = _reactmotion.motionTokens.curveDecelerateMid, exitDuration = duration, exitEasing = _reactmotion.motionTokens.curveAccelerateMid, fromScale = 0.9, animateOpacity = true })=>{
    const fromOpacity = animateOpacity ? 0 : 1;
    const toOpacity = 1;
    const toScale = 1;
    // TODO: use fadeAtom
    // TODO: make scaleAtom
    const enterKeyframes = [
        {
            opacity: fromOpacity,
            transform: `scale3d(${fromScale}, ${fromScale}, 1)`,
            visibility: 'visible'
        },
        {
            opacity: toOpacity,
            transform: `scale3d(${toScale}, ${toScale}, 1)`
        }
    ];
    const exitKeyframes = [
        {
            opacity: toOpacity,
            transform: `scale3d(${toScale}, ${toScale}, 1)`
        },
        {
            opacity: fromOpacity,
            transform: `scale3d(${fromScale}, ${fromScale}, 1)`,
            visibility: 'hidden'
        }
    ];
    return {
        enter: {
            duration,
            easing,
            keyframes: enterKeyframes
        },
        exit: {
            duration: exitDuration,
            easing: exitEasing,
            keyframes: exitKeyframes
        }
    };
};
const Scale = (0, _reactmotion.createPresenceComponent)(scalePresenceFn);
const ScaleSnappy = (0, _reactmotion.createPresenceComponentVariant)(Scale, {
    duration: _reactmotion.motionTokens.durationFast,
    easing: _reactmotion.motionTokens.curveDecelerateMax,
    exitEasing: _reactmotion.motionTokens.curveAccelerateMax
});
const ScaleRelaxed = (0, _reactmotion.createPresenceComponentVariant)(Scale, {
    duration: _reactmotion.motionTokens.durationGentle,
    easing: _reactmotion.motionTokens.curveDecelerateMid,
    exitEasing: _reactmotion.motionTokens.curveAccelerateMid
});
